name: Check CoreDNS releases

on:
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:

permissions:
  contents: write

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    outputs:
      new_release: ${{ steps.check.outputs.new_release }}
      tag: ${{ steps.check.outputs.tag }}
    steps:
      - name: Check for new CoreDNS Release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: check
        with:
          script: |
            const { data: { tag_name: coredns_tag } } = await github.rest.repos.getLatestRelease({
              owner: 'coredns',
              repo: 'coredns'
            })
            try {
              const { data: { tag_name: latest_build_tag } } = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo
              })
            } catch (error) {
              console.log('No releases found')
              core.setOutput('new_release', 'true')
              core.setOutput('tag', coredns_tag)
              return
            }
            if (coredns_tag === latest_build_tag) {
              console.log('Repository release matches latest CoreDNS release')
              core.setOutput('new_release', 'false')
            } else {
              console.log('Repository release does not match latest CoreDNS release')
              console.log(`CoreDNS: ${tag_name}`)
              console.log(`Repository: ${name}`)
              core.setOutput('new_release', 'true')
              core.setOutput('tag', coredns_tag)
            }

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.new_release == 'true'
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build binaries
        env:
          COREDNS_VERSION: ${{ needs.check.outputs.tag }}
        run: ./build.sh

      - name: Create tag
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.check.outputs.tag }}',
              sha: context.sha
            })

      - name: Create release
        uses: softprops/action-gh-release@01570a1f39cb168c169c802c3bceb9e93fb10974  # v2.2.0
        with:
          name: ${{ needs.check.outputs.tag }}
          tag_name: ${{ needs.check.outputs.tag }}
          files: dist/*
