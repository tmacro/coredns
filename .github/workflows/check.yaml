name: Check CoreDNS releases

on:
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:



jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Get latest CoreDNS release
        id: coredns_info
        run: |
          TAG=$(curl -s https://api.github.com/repos/coredns/coredns/releases/latest | \
            jq -r '.tag_name')
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Get latest release for build repo
        id: repo_info
        run: |
          TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | \
            jq -r '.name')
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Compare Release Tag with Stored State
        id: compare_tags
        run: |
          # Store the newly fetched tag in an environment variable for convenience
          new_tag="${{ steps.coredns_info.outputs.tag }}"
          existing_tag="${{ steps.repo_info.outputs.tag }}"

          if [ -z "$new_tag" ]; then
            echo "Failed to fetch the latest CoreDNS release tag."
            exit 1
          fi

          if [ -z "$existing_tag" ]; then
            echo "No existing release tag found for the build repo."
            echo "new_release=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ "$old_tag" = "$new_tag" ]; then
            echo "No new release found. The latest tag is unchanged."
            echo "new_release=false" >> $GITHUB_OUTPUT
          else
            echo "New release detected! Old: '$old_tag' vs New: '$new_tag'"
            echo "new_release=true" >> $GITHUB_OUTPUT
          fi

      - name: Trigger release.yaml workflow
        if: steps.compare_tags.outputs.new_release == 'true'
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/release.yaml/dispatches \
            -d '{"ref":"trunk"}'
